Terminals unused in grammar

   Lower_e


Grammar

    0 $accept: calclist $end

    1 exp: exp CMP exp
    2    | exp '+' exp
    3    | exp '-' exp
    4    | exp '*' exp
    5    | exp '/' exp
    6    | '|' exp
    7    | '(' exp ')'
    8    | '-' exp
    9    | NUMBER
   10    | FUNC '(' explist ')'
   11    | NAME
   12    | NAME '=' exp
   13    | NAME '(' explist ')'

   14 explist: exp
   15        | exp ',' explist

   16 symlist: NAME
   17        | NAME ',' symlist

   18 compound_statement: '{' '}'
   19                   | '{' block_item_list '}'

   20 block_item_list: statement
   21                | block_item_list statement

   22 expression_statement: ';'
   23                     | exp ';'

   24 selection_statement: IF exp THEN statement
   25                    | IF exp THEN statement ELSE statement

   26 iteration_statement: WHILE exp DO statement

   27 statement: compound_statement
   28          | expression_statement
   29          | selection_statement
   30          | iteration_statement
   31          | exp

   32 calclist: /* empty */
   33         | calclist statement EOL
   34         | calclist LET NAME '(' symlist ')' compound_statement EOL
   35         | calclist error EOL


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 10 13 34
')' (41) 7 10 13 34
'*' (42) 4
'+' (43) 2
',' (44) 15 17
'-' (45) 3 8
'/' (47) 5
';' (59) 22 23
'=' (61) 12
'{' (123) 18 19
'|' (124) 6
'}' (125) 18 19
error (256) 35
NUMBER (258) 9
NAME (259) 11 12 13 16 17 34
FUNC (260) 10
EOL (261) 33 34 35
IF (262) 24 25
THEN (263) 24 25
ELSE (264) 25
WHILE (265) 26
DO (266) 26
LET (267) 34
CMP (268) 1
Lower_e (269)
UMINUS (270)
Lower (271)
LOWER_THAN_ELSE (272)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
exp (31)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13, on right: 1 2 3 4 5 6 7
    8 12 14 15 23 24 25 26 31
explist (32)
    on left: 14 15, on right: 10 13 15
symlist (33)
    on left: 16 17, on right: 17 34
compound_statement (34)
    on left: 18 19, on right: 27 34
block_item_list (35)
    on left: 20 21, on right: 19 21
expression_statement (36)
    on left: 22 23, on right: 28
selection_statement (37)
    on left: 24 25, on right: 29
iteration_statement (38)
    on left: 26, on right: 30
statement (39)
    on left: 27 28 29 30 31, on right: 20 21 24 25 26 33
calclist (40)
    on left: 32 33 34 35, on right: 0 33 34 35


state 0

    0 $accept: . calclist $end

    $default  reduce using rule 32 (calclist)

    calclist  go to state 1


state 1

    0 $accept: calclist . $end
   33 calclist: calclist . statement EOL
   34         | calclist . LET NAME '(' symlist ')' compound_statement EOL
   35         | calclist . error EOL

    $end    shift, and go to state 2
    error   shift, and go to state 3
    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14

    exp                   go to state 15
    compound_statement    go to state 16
    expression_statement  go to state 17
    selection_statement   go to state 18
    iteration_statement   go to state 19
    statement             go to state 20


state 2

    0 $accept: calclist $end .

    $default  accept


state 3

   35 calclist: calclist error . EOL

    EOL  shift, and go to state 21


state 4

    9 exp: NUMBER .

    $default  reduce using rule 9 (exp)


state 5

   11 exp: NAME .
   12    | NAME . '=' exp
   13    | NAME . '(' explist ')'

    '='  shift, and go to state 22
    '('  shift, and go to state 23

    $default  reduce using rule 11 (exp)


state 6

   10 exp: FUNC . '(' explist ')'

    '('  shift, and go to state 24


state 7

   24 selection_statement: IF . exp THEN statement
   25                    | IF . exp THEN statement ELSE statement

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 25


state 8

   26 iteration_statement: WHILE . exp DO statement

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 26


state 9

   34 calclist: calclist LET . NAME '(' symlist ')' compound_statement EOL

    NAME  shift, and go to state 27


state 10

    8 exp: '-' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 28


state 11

    6 exp: '|' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 29


state 12

    7 exp: '(' . exp ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 30


state 13

   22 expression_statement: ';' .

    $default  reduce using rule 22 (expression_statement)


state 14

   18 compound_statement: '{' . '}'
   19                   | '{' . block_item_list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14
    '}'     shift, and go to state 31

    exp                   go to state 15
    compound_statement    go to state 16
    block_item_list       go to state 32
    expression_statement  go to state 17
    selection_statement   go to state 18
    iteration_statement   go to state 19
    statement             go to state 33


state 15

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp
   23 expression_statement: exp . ';'
   31 statement: exp .

    CMP  shift, and go to state 34
    '+'  shift, and go to state 35
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ';'  shift, and go to state 39

    $default  reduce using rule 31 (statement)


state 16

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


state 17

   28 statement: expression_statement .

    $default  reduce using rule 28 (statement)


state 18

   29 statement: selection_statement .

    $default  reduce using rule 29 (statement)


state 19

   30 statement: iteration_statement .

    $default  reduce using rule 30 (statement)


state 20

   33 calclist: calclist statement . EOL

    EOL  shift, and go to state 40


state 21

   35 calclist: calclist error EOL .

    $default  reduce using rule 35 (calclist)


state 22

   12 exp: NAME '=' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 41


state 23

   13 exp: NAME '(' . explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 42
    explist  go to state 43


state 24

   10 exp: FUNC '(' . explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 42
    explist  go to state 44


state 25

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp
   24 selection_statement: IF exp . THEN statement
   25                    | IF exp . THEN statement ELSE statement

    THEN  shift, and go to state 45
    CMP   shift, and go to state 34
    '+'   shift, and go to state 35
    '-'   shift, and go to state 36
    '*'   shift, and go to state 37
    '/'   shift, and go to state 38


state 26

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp
   26 iteration_statement: WHILE exp . DO statement

    DO   shift, and go to state 46
    CMP  shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38


state 27

   34 calclist: calclist LET NAME . '(' symlist ')' compound_statement EOL

    '('  shift, and go to state 47


state 28

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp
    8    | '-' exp .

    $default  reduce using rule 8 (exp)


state 29

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp
    6    | '|' exp .

    $default  reduce using rule 6 (exp)


state 30

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp
    7    | '(' exp . ')'

    CMP  shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ')'  shift, and go to state 48


state 31

   18 compound_statement: '{' '}' .

    $default  reduce using rule 18 (compound_statement)


state 32

   19 compound_statement: '{' block_item_list . '}'
   21 block_item_list: block_item_list . statement

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14
    '}'     shift, and go to state 49

    exp                   go to state 15
    compound_statement    go to state 16
    expression_statement  go to state 17
    selection_statement   go to state 18
    iteration_statement   go to state 19
    statement             go to state 50


state 33

   20 block_item_list: statement .

    $default  reduce using rule 20 (block_item_list)


state 34

    1 exp: exp CMP . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 51


state 35

    2 exp: exp '+' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 52


state 36

    3 exp: exp '-' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 53


state 37

    4 exp: exp '*' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 54


state 38

    5 exp: exp '/' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 55


state 39

   23 expression_statement: exp ';' .

    $default  reduce using rule 23 (expression_statement)


state 40

   33 calclist: calclist statement EOL .

    $default  reduce using rule 33 (calclist)


state 41

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp
   12    | NAME '=' exp .

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 12 (exp)


state 42

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp
   14 explist: exp .
   15        | exp . ',' explist

    CMP  shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ','  shift, and go to state 56

    $default  reduce using rule 14 (explist)


state 43

   13 exp: NAME '(' explist . ')'

    ')'  shift, and go to state 57


state 44

   10 exp: FUNC '(' explist . ')'

    ')'  shift, and go to state 58


state 45

   24 selection_statement: IF exp THEN . statement
   25                    | IF exp THEN . statement ELSE statement

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14

    exp                   go to state 15
    compound_statement    go to state 16
    expression_statement  go to state 17
    selection_statement   go to state 18
    iteration_statement   go to state 19
    statement             go to state 59


state 46

   26 iteration_statement: WHILE exp DO . statement

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14

    exp                   go to state 15
    compound_statement    go to state 16
    expression_statement  go to state 17
    selection_statement   go to state 18
    iteration_statement   go to state 19
    statement             go to state 60


state 47

   34 calclist: calclist LET NAME '(' . symlist ')' compound_statement EOL

    NAME  shift, and go to state 61

    symlist  go to state 62


state 48

    7 exp: '(' exp ')' .

    $default  reduce using rule 7 (exp)


state 49

   19 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 19 (compound_statement)


state 50

   21 block_item_list: block_item_list statement .

    $default  reduce using rule 21 (block_item_list)


state 51

    1 exp: exp . CMP exp
    1    | exp CMP exp .
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    CMP  error (nonassociative)

    $default  reduce using rule 1 (exp)


state 52

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    2    | exp '+' exp .
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 2 (exp)


state 53

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    3    | exp '-' exp .
    4    | exp . '*' exp
    5    | exp . '/' exp

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 3 (exp)


state 54

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    4    | exp '*' exp .
    5    | exp . '/' exp

    $default  reduce using rule 4 (exp)


state 55

    1 exp: exp . CMP exp
    2    | exp . '+' exp
    3    | exp . '-' exp
    4    | exp . '*' exp
    5    | exp . '/' exp
    5    | exp '/' exp .

    $default  reduce using rule 5 (exp)


state 56

   15 explist: exp ',' . explist

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 42
    explist  go to state 63


state 57

   13 exp: NAME '(' explist ')' .

    $default  reduce using rule 13 (exp)


state 58

   10 exp: FUNC '(' explist ')' .

    $default  reduce using rule 10 (exp)


state 59

   24 selection_statement: IF exp THEN statement .
   25                    | IF exp THEN statement . ELSE statement

    ELSE  shift, and go to state 64

    $default  reduce using rule 24 (selection_statement)


state 60

   26 iteration_statement: WHILE exp DO statement .

    $default  reduce using rule 26 (iteration_statement)


state 61

   16 symlist: NAME .
   17        | NAME . ',' symlist

    ','  shift, and go to state 65

    $default  reduce using rule 16 (symlist)


state 62

   34 calclist: calclist LET NAME '(' symlist . ')' compound_statement EOL

    ')'  shift, and go to state 66


state 63

   15 explist: exp ',' explist .

    $default  reduce using rule 15 (explist)


state 64

   25 selection_statement: IF exp THEN statement ELSE . statement

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14

    exp                   go to state 15
    compound_statement    go to state 16
    expression_statement  go to state 17
    selection_statement   go to state 18
    iteration_statement   go to state 19
    statement             go to state 67


state 65

   17 symlist: NAME ',' . symlist

    NAME  shift, and go to state 61

    symlist  go to state 68


state 66

   34 calclist: calclist LET NAME '(' symlist ')' . compound_statement EOL

    '{'  shift, and go to state 14

    compound_statement  go to state 69


state 67

   25 selection_statement: IF exp THEN statement ELSE statement .

    $default  reduce using rule 25 (selection_statement)


state 68

   17 symlist: NAME ',' symlist .

    $default  reduce using rule 17 (symlist)


state 69

   34 calclist: calclist LET NAME '(' symlist ')' compound_statement . EOL

    EOL  shift, and go to state 70


state 70

   34 calclist: calclist LET NAME '(' symlist ')' compound_statement EOL .

    $default  reduce using rule 34 (calclist)
